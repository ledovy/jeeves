<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="CalcReader" script:language="StarBasic">REM  *****  BASIC  *****
Option Compatible
Option ClassModule
Option Explicit

&apos;ATTRIBUTES
Dim timeHelper, typeHelper as Object&apos;, calcHelper as Object
Dim config, masterData, contactData, workTypes As Object
Dim currentTargetRow As Integer
Dim model as Object

&apos;CONSTRUCTOR
Public Sub Class_Initialize
	currentTargetRow = calcStartRow
	model = new CalcModel
End Sub

Public Sub Init(dataProvider as Object)
	dataProvider.InitCalculationData()
	timeHelper = dataProvider.timeHelper
	typeHelper = dataProvider.typeHelper
	&apos;calcHelper = dataProvider.calcHelper
	
	config = dataProvider.config
	masterData = dataProvider.masterData
	workTypes = dataProvider.types
	currentTargetRow = calcStartRow
End Sub

Public Sub ReadCalculation
	ReadTypes()
	ReadEntries()
End Sub

Sub ReadTypes
	Dim i As Integer
	i = typeFirstWorkTypesRow
	Do While typeHelper.HasText(typeTypeColumn, i)
		Dim category As Object
		category = model.CreateCategory(typeHelper, i)
		model.AddCategory(category)
		i = i+1
	Loop
End Sub


Sub ReadEntries
	Dim i As Integer
	i = timeFirstEntryRow
	Dim rowValue As String
	rowValue = timeHelper.GetText(timeDateColumn, i)
	Do While (&quot;&quot; &lt;&gt; rowValue) OR (i &lt; (timeFirstEntryRow+timeMaxEntries))
		Dim entry, category as Object
		entry = model.CreateEntry(timeHelper, i)
		If entry.HasValues() Then
			Dim typeValue As String
			Dim sumValue as Integer
			typeValue = timeHelper.GetText(timeTypeColumn, i)
			category = model.GetCategory(typeValue)
			If category.grouped Then
				sumValue = timeHelper.GetText(timeTimeColumn, i)
			Else
				sumValue = entry.time
				model.AddEntry(entry)
			End If
			model.AddEffort(sumValue, typeValue, entry)
		End If
		&apos; increment
		i = i+1
		rowValue = timeHelper.GetText(timeDateColumn, i)
	Loop
	AddCollapsedEntries()
	If (i &gt; (timeFirstEntryRow+timeMaxEntries)) Then
		Warn(&quot;Maximale Anzahl von &quot;+timeMaxEntries+&quot; Zeilen Ã¼berschritten: &quot;+(i-timeFirstEntryRow))
	End If
End Sub

Sub AddCollapsedEntries
	Dim row As Integer
	For row = 0 To model.CategoriesSize-1
		Dim typeValue As String
		Dim t as Object
		t = model.Categories(row)
		typeValue = t.title
		If t.grouped Then
			Dim entry As Object
			entry = model.CreateCategoryEntry(t)
			If entry.cost &lt;&gt; 0 Then
				If t.min &lt;&gt; t.max Then
					entry.datum = t.minText + &quot; - &quot; + t.maxText
				Else
					entry.datum = t.minText
				End If
				model.AddEntry(entry)
			End If
		End If
	Next row
End Sub


</script:module>