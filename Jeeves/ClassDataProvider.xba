<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ClassDataProvider" script:language="StarBasic">REM  *****  BASIC  *****
Option Compatible
Option ClassModule
Option Explicit

&apos;CONSTANTS

&apos;ATTRIBUTES
Public calcPath as String
Public calcDoc as Object
Public timeHelper as Object
Public typeHelper as Object
Public calcHelper as Object
Public configHelper as Object
Public masterData As Object
Public types As Object
Public config As Object

Public accPath as String
Public accDoc as Object
Public accHelper as Object
Public accCustomerHelper as Object
Public contactHelper As Object
Public contactData As Object

&apos;CONSTRUCTOR
Public Sub Class_Initialize
	
End Sub

Public Sub Init(doc as Object)
	calcDoc = doc
	calcPath = doc.getLocation()
	
	LoadConfigHelper()
	LoadConfiguration()
	accPath = config.PathAccounting
End Sub

Public Sub InitTest(calcFile, accFile as String)
	calcDoc = LoadDocument(calcFile)
	calcPath = calcFile
	accPath = accFile
End Sub

Public Sub InitCalculationData
	LoadTimeHelper()
	LoadTypeHelper()
	LoadCalcHelper()
	LoadConfigHelper()
	
	LoadMasterData()
	LoadWorkTypes()
	LoadConfiguration()
End Sub

Public Sub CloseDocs
	CloseHelper(timeHelper)
	CloseHelper(typeHelper)
	CloseHelper(calcHelper)
	CloseHelper(configHelper)
	CloseHelper(contactHelper)
	CloseHelper(accHelper)
	CloseHelper(accCustomerHelper)
End Sub

Public Sub CloseHelper(helper as Object)
	If Not IsNull(helper) Then
		helper.CloseDoc()
	End If
End Sub

Public Sub LoadTimeHelper
	If Not IsEmpty(calcDoc) Then
		timeHelper = DocHelper(calcDoc, timeSheetTitle)
	Else
		Info(&quot;no calcDoc: &quot;+calcPath)
	End If
End Sub

Public Sub LoadTypeHelper
	If Not IsEmpty(calcDoc) Then
		typeHelper = DocHelper(calcDoc, typeSheetTitle)
	Else
		Info(&quot;no calcDoc: &quot;+calcPath)
	End If
End Sub

Public Sub LoadCalcHelper
	If Not IsEmpty(calcDoc) Then
		calcHelper = DocHelper(calcDoc, calcSheetTitle)
	Else
		Info(&quot;no calcDoc: &quot;+calcPath)
	End If
End Sub

Public Sub LoadConfigHelper
	&apos;TODO change source to cockpit
	If Not IsEmpty(calcDoc) Then
		configHelper = DocHelper(calcDoc, configSheetTitle)
	Else
		Info(&quot;no calcDoc: &quot;+calcPath)
	End If
End Sub

Public Sub LoadMasterData
	If Not IsEmpty(timeHelper) Then
		masterData = New ClassMasterData
		masterData.Init(timeHelper, calcPath)
	Else
		Info(&quot;no timeSheet: &quot;+calcPath)
	End If
End Sub

Public Sub LoadWorkTypes
	If Not IsEmpty(typeHelper) Then
		types = New ClassWorkTypes
		types.Init(typeHelper)
	Else
		Info(&quot;no typeSheet: &quot;+calcPath)
	End If
End Sub

Public Sub LoadConfiguration
	If Not IsEmpty(configHelper) Then
		config = New ClassConfig
		config.Init(configHelper)
	Else
		Info(&quot;no configSheet: &quot;+calcPath)
	End If
End Sub


Public Sub InitAccountingData
	If FileExists(accPath) Then
		accDoc = LoadDocument(accPath)
		LoadContactHelper()
		LoadTimeHelper()
		LoadCalcHelper()
		LoadContactHelper()
	
	    LoadContactData()
		LoadMasterData()
	    LoadAccHelper()
	    LoadAccCustomerHelper()
	Else
		Info(&quot;no accounting document: &quot;+accPath)
	End If
End Sub

Public Sub LoadContactHelper
	If Not IsEmpty(accDoc) Then
		contactHelper = DocHelper(accDoc, accSheetTitle)
	Else
		Info(&quot;no accDoc: &quot;+accPath)
	End If
End Sub

Public Sub LoadContactData
	If Not IsEmpty(contactHelper) Then
		contactData = New ClassContact
		contactData.Init(contactHelper)
	Else
		Info(&quot;no contactSheet: &quot;+accPath)
	End If
End Sub

Public Sub LoadAccHelper
	Dim sheetName as String
	sheetName = masterData.calculationYear
    If accDoc.Sheets.hasByName(sheetName) Then
		accHelper = DocHelper(accDoc, sheetName)
	Else
		accDoc.Sheets.copyByName(&quot;Vorlage&quot;, sheetName, 0)
		accHelper = DocHelper(accDoc, sheetName)
		accHelper.SetRangeText(&quot;A1&quot;, contactData.contactFirstName+&quot; &quot;+contactData.contactLastName+&quot; â€“ Auflistung Abrechnungen &quot;+sheetName)
	End If
End Sub

Public Sub LoadAccCustomerHelper
	&apos;TODO implement
	&apos;accCustomerHelper = DocHelper(accDoc, sheetName)
End Sub
</script:module>