<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Util" script:language="StarBasic">REM  *****  BASIC  *****

Public Sub Main
	Info(&quot;Jeeves v2.1.1-SNAPSHOT&quot;)
End Sub

Public Sub CheckValue(title as String, value as String) as String
	Dim valid as Boolean
	valid = IsValueSet(value)
	If Not valid Then
		Warn(title &amp; &quot; fehlt&quot;)
	End If
	CheckValue = value
End Sub

Public Function IsValueSet(value as String) as String
	If value = &quot;&quot; Then
		IsValueSet = False
	Else
		IsValueSet = True
	End If
End Function

Public Function SheetHelper(sheet as String) as Object
	SheetHelper = DocHelper(ThisComponent, sheet)
End Function

Public Function DocHelper(doc as Object, sheet as String) as Object
	Dim h as new ClassCellHelper
	h.Init(doc, sheet)
	DocHelper = h
End Function

Public Function CalcRowEntry(helper as Object, row As Integer)
&apos;DEPRECATED
	Dim entry As New CalcEntry
	entry.datum = helper.GetText(timeDateColumn, row)
	entry.factor = helper.GetText(timeFactorCostColumn, row) + &quot; / &quot; + helper.GetText(timeFactorTimeColumn, row) + &quot; Min.&quot;
	entry.time = helper.GetDate(timeTimeRoundedColumn, row)
	entry.cost = helper.GetMoney(timeCostRoundedColumn, row)
	entry.title = helper.GetText(timeNameColumn, row)
	CalcRowEntry = entry
End Function

Public Function CalcTypeEntry(helper as Object, row As Integer)
&apos;DEPRECATED
	Dim entry As New CalcEntry
	entry.title = helper.GetText(typeTypeColumn, row)
	entry.factor = helper.GetText(typeCostColumn, row) + &quot; / &quot; + helper.GetText(typeTimeColumn, row) + &quot; Min.&quot;
	entry.time = helper.GetDate(typeMinutesRoundedColumn, row)
	entry.cost = helper.GetMoney(typeCostsFormattedColumn, row)
	CalcTypeEntry = entry
End Function

Public Function AccRowEntry(helper as Object, row as Integer, masterData as Object)
	Dim entry As Object
	entry = New StructAccEntry
	entry.title = masterData.accountingTitle
	entry.time = masterData.calculationDateValue
	entry.cost = helper.GetMoney(calcCostColumn, row)
	entry.filename = masterData.fileName
	AccRowEntry = entry
End Function

Public Sub WorkTypeNewRow(data as Object)
	Dim helper as Object
	helper = data.typeHelper
	Dim row, formRow as Integer
	
	row = helper.FindRow(typeTypeColumn, typeFirstWorkTypesRow, &quot;&quot;, True)
	formRow = row + 1
	helper.InsertRows(row, 1)
	
	helper.SetText(typeTypeColumn, row, &quot;???&quot;)
	helper.SetText(typeCollapsedColumn, row, &quot;Nein&quot;)
	helper.SetText(typeCollapsedMinutesColumn, row, 0)
	helper.SetMoney(typeCostColumn, row, data.config.DefaultFactorCost)
	helper.SetNumber(typeTimeColumn, row, data.config.DefaultFactorTime)
	helper.SetFormula(typeCostPerMinutesColumn, row, &quot;=D&quot;+formRow+&quot;/E&quot;+formRow)
	helper.SetFormatMoney(typeCostPerMinutesColumn, row)
	helper.SetNumber(typeEffortColumn, row, 0)
	helper.SetFormula(typeMinutesRoundedColumn, row, &quot;=CEILING(G&quot;+formRow+&quot;;C&quot;+formRow+&quot;;0)&quot;)
	helper.SetFormula(typeMinutesFormattedColumn, row, &quot;=H&quot;+formRow+&quot;/(24*60)&quot;)
	helper.SetFormatTime(typeMinutesFormattedColumn, row)
	helper.SetFormula(typeCostsFormattedColumn, row, &quot;=H&quot;+formRow+&quot;*F&quot;+formRow+&quot;&quot;)
	helper.SetFormatMoney(typeCostsFormattedColumn, row)
	helper.GetRangeByName(&quot;A&quot;+formRow+&quot;:E&quot;+formRow+&quot;&quot;).CharColor = RGB(0,128,0)
	helper.GetRangeByName(&quot;F&quot;+formRow+&quot;:J&quot;+formRow+&quot;&quot;).CharColor = RGB(128,0,0)
	helper.SaveDoc()
End Sub

Public Function LoadDocument(path as String)
	Dim properties(0) As New com.sun.star.beans.PropertyValue
	properties(0).Name = &quot;Hidden&quot;
	properties(0).Value = True
    LoadDocument = StarDesktop.loadComponentFromURL(ConvertToURL(path), &quot;_blank&quot;, 0, properties())
End Function

Public Sub ShowGreetings
	Dim t as Date
	t = Now()
	If MONTH(t)=10 AND DAY(t)=29 Then
	&apos;If MONTH(t)=2 AND DAY(t)=8 Then
		Info(&quot;Herzlichen Gl√ºckwunsch zum Geburtstag!&quot;, MB_ICONINFORMATION, &quot;Happy Birthday&quot;)
	End If
End Sub

Dim testMode as Boolean

Sub SetTestMode(mode as Boolean)
	testMode = mode
End Sub

Public Function Info(msg as String, Optional options as Integer, Optional title as String)
	If NOT testMode Then
		Dim flags as Integer
		If IsMissing(options) Then
			flags = MB_ICONINFORMATION
		Else
			flags = options
		End If
		
		Dim header as String
		If IsMissing(title) Then
			header = &quot;Jeeves&quot;
		Else
			header = title
		End If
		
		
		Info = MsgBox(msg, flags, title)
	Else
		Info = 5
	End If
End Function

Public Function Warn(msg as String)
	Warn = Info(msg, MB_ICONEXCLAMATION, &quot;Warnung&quot;)
End Function

</script:module>