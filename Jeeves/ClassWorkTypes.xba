<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ClassWorkTypes" script:language="StarBasic">REM  *****  BASIC  *****
Option Compatible
Option ClassModule
Option Explicit

&apos;CONSTANTS
Public Const typeMaxEntries = 100

&apos;ATTRIBUTES	
Public TypesSize, CollapsedSize, SeparateSize As Integer
Public WorkTypes(typeMaxEntries) as Object

Public helper as Object

&apos;CONSTRUCTOR
Public Sub Class_Initialize
	TypesSize = 0
	CollapsedSize = 0
	SeparateSize = 0
End Sub

Public Sub Init(sheetHelper as Object)
	helper = sheetHelper
	ReadTypes()
	Reset()
End Sub

Sub Reset
	Dim i As Integer
	For i = 1 To TypesSize
		Dim row As Integer
		row = WorkTypes(i-1).row
		helper.SetText(typeEffortColumn, row, 0)
	Next i
End Sub

Sub ReadTypes
	TypesSize = 0
	CollapsedSize = 0
	SeparateSize = 0
	Dim i As Integer
	i = 1
	Dim rowValue As String
	rowValue = helper.GetText(typeTypeColumn, i)
	Do While &quot;&quot; &lt;&gt; rowValue
		Dim collapsed As Boolean
		collapsed = helper.GetText(typeCollapsedColumn, i) = &quot;Ja&quot;
		AddType(rowValue, collapsed, i)
		i = i+1
		rowValue = helper.GetText(typeTypeColumn, i)
	Loop
End Sub

Private Sub AddType(title As String, grouped As Boolean, row As Integer)
	Dim workType as new StructWorkType
	workType.title = title
	workType.grouped = grouped
	workType.row = row
	WorkTypes(TypesSize) = workType
	If grouped Then
		CollapsedSize = CollapsedSize + 1
	Else
		SeparateSize = SeparateSize + 1
	End If
	TypesSize = TypesSize + 1
End Sub

Public Function IsCollapsed(workType As String)
	Dim i As Integer
	i = GetRow(workType)
	If i&lt;0 Then
		IsCollapsed = 0
	ELse
		IsCollapsed = WorkTypes(i).grouped
	End If
End Function

Private Function GetRow(workType As String) As Integer
	Dim i As Integer 
	For i = 0 To TypesSize-1
		Dim t as Object
		t = WorkTypes(i)
		If t.title = workType Then
			GetRow = i
			Exit Function
		End If
	Next i
	Warn(&quot;Unbekannte Kategorie: &apos;&quot;+workType+&quot;&apos;&quot;)
	GetRow = -1
End Function

Public Sub AddEffort(effort As Integer, workType As String, entry As Object)
	Dim i As Integer
	Dim start As Integer
	start = GetRow(workType)
	If start &lt; 0 Then
		Warn(&quot;Unbekannte Kategorie: &apos;&quot;+workType+&quot;&apos;&quot;)
	Else
		i = start+1
		Dim v As Integer
		v = helper.GetText(typeEffortColumn, i)
		v = v + effort
		helper.SetText(typeEffortColumn, i, v)
		Dim t as Object
		t = WorkTypes(start)
		If (0 = t.min) OR (t.min &gt; entry.datum) Then
			t.min = entry.datum
			t.minText = entry.datum
		End If
		If (0 = t.max) OR (t.max &lt; entry.datum) Then
			t.max = entry.datum
			t.maxText = entry.datum
		End If
	End If
End Sub
</script:module>